[package]
name = "nebula-template"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
description = "A powerful, type-safe template engine for workflow automation and data transformation"
keywords.workspace = true
categories.workspace = true
exclude = [
    "tests/fixtures/*",
    "benches/data/*",
]

[features]
default = ["std", "serde", "chrono"]

# Core features
std = []
serde = ["dep:serde", "dep:serde_json"]
chrono = ["dep:chrono"]

# Optional integrations
regex = ["dep:regex"]
base64 = ["dep:base64"]
uuid = ["dep:uuid"]

# Performance features
simd = []
parallel = ["dep:rayon"]

# Development features
debug = []
trace = ["dep:tracing"]

[dependencies]
# Core dependencies - используем workspace versions
thiserror.workspace = true
anyhow.workspace = true

# Serialization
serde = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }

# Date/time handling
chrono = { workspace = true, optional = true }

# Utility
futures = { workspace = true, optional = true }
bytes = { workspace = true, optional = true }
uuid = { workspace = true, optional = true }

# Data structures
indexmap = "2.0"

# Text processing (optional)
regex = { version = "1.0", optional = true }
base64 = { version = "0.22", optional = true }

# Performance (optional)
rayon = { version = "1.10", optional = true }

# Logging/tracing (optional)
tracing = { workspace = true, optional = true }

nebala-value = { path = "../nebula-value", features = ["full"] }

[dev-dependencies]
# Testing - используем workspace dependencies
tokio.workspace = true
pretty_assertions.workspace = true
tempfile.workspace = true

# Benchmarking и testing
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.0"
insta = "1.0"

# Examples
clap = { version = "4.0", features = ["derive"] }

[lib]
name = "nebula_template"
path = "src/lib.rs"


# Наследуем workspace lints
[lints]
workspace = true

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]